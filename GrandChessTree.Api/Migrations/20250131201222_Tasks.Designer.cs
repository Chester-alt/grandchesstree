// <auto-generated />
using GrandChessTree.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GrandChessTree.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250131201222_Tasks")]
    partial class Tasks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GrandChessTree.Api.D10Search.D10SearchItem", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.Property<long>("AvailableAt")
                        .HasColumnType("bigint")
                        .HasColumnName("available_at");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("confirmed");

                    b.Property<long>("PassCount")
                        .HasColumnType("bigint")
                        .HasColumnName("pass_count");

                    b.HasKey("Id");

                    b.ToTable("d10_search_items");
                });

            modelBuilder.Entity("GrandChessTree.Api.D10Search.D10SearchTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Captures")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("captures");

                    b.Property<decimal>("Castles")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("castles");

                    b.Property<decimal>("DirectCheck")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("direct_checks");

                    b.Property<decimal>("DirectCheckmate")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("direct_checkmate");

                    b.Property<decimal>("DirectDiscoverdCheckmate")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("direct_discoverd_checkmate");

                    b.Property<decimal>("DirectDiscoveredCheck")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("direct_discovered_check");

                    b.Property<decimal>("DoubleDiscoverdCheckmate")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("double_discoverd_checkmate");

                    b.Property<decimal>("DoubleDiscoveredCheck")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("double_discovered_check");

                    b.Property<decimal>("Enpassant")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("enpassants");

                    b.Property<long>("FinishedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("finished_at");

                    b.Property<decimal>("Nodes")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("nodes");

                    b.Property<float>("Nps")
                        .HasColumnType("real")
                        .HasColumnName("nps");

                    b.Property<decimal>("Promotions")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("promotions");

                    b.Property<decimal>("SearchItemId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("search_item_id");

                    b.Property<decimal>("SingleDiscoveredCheck")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("single_discovered_check");

                    b.Property<decimal>("SingleDiscoveredCheckmate")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("single_discovered_checkmate");

                    b.Property<long>("StartedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("started_at");

                    b.HasKey("Id");

                    b.HasIndex("SearchItemId");

                    b.ToTable("d10_search_tasks");
                });

            modelBuilder.Entity("GrandChessTree.Api.D10Search.D10SearchTask", b =>
                {
                    b.HasOne("GrandChessTree.Api.D10Search.D10SearchItem", "SearchItem")
                        .WithMany("SearchTasks")
                        .HasForeignKey("SearchItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SearchItem");
                });

            modelBuilder.Entity("GrandChessTree.Api.D10Search.D10SearchItem", b =>
                {
                    b.Navigation("SearchTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
